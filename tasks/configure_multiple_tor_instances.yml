---

- name: Ensure tor instance parent dir exists
  file:
    path: '{{ tor_instance_parent_dir }}'
    state: 'directory'
    owner: '{{ tor_User | default(omit) }}'

- name: Ensure tor instances data dir exist
  file:
    path: '{{ tor_instance_parent_dir }}/{{ item.name }}/data'
    state: 'directory'
    owner: '{{ tor_User | default(omit) }}'
  with_items: tor_instances

- name: Ensure tor instances log file exist
  file:
    path: '{{ tor_instance_parent_dir }}/{{ item.name }}/log'
    state: 'touch'
    owner: '{{ tor_User | default(omit) }}'
  with_items: tor_instances

- name: Ensure tor instances pid file exist
  file:
    path: '{{ tor_instance_parent_dir }}/{{ item.name }}/tor.pid'
    state: 'touch'
    owner: '{{ tor_User | default(omit) }}'
  with_items: tor_instances

- name: Ensure instances template torrc
  template:
    src: 'torrc.j2'
    dest: '{{ tor_instance_parent_dir }}/{{ item.name }}/torrc'
    owner: '{{ tor_User | default(omit) }}'
    mode: 0644
  with_items: tor_instances
  register: instances_status

- name: Ensure tor instances are reloaded if its torrc changed
  shell: "kill -HUP `cat {{ tor_instance_parent_dir }}/{{ item.item.name }}/tor.pid`"
  ignore_errors: yes
  with_items: instances_status.results
  when: item.changed == True and not tor_do_not_install_anything

- name: Write tor configuration for instance
  shell: "kill -0 `cat {{ tor_instance_parent_dir }}/{{ item.name }}/tor.pid` || tor -f {{ tor_instance_parent_dir }}/{{ item.name }}/torrc"
  with_items: tor_instances
  when: not tor_do_not_install_anything
